{"version":3,"file":"static/js/838.85f3f9d9.chunk.js","mappings":"sMAKA,MAiDA,EAjDgBA,KACd,MAAOC,EAASC,IAAcC,EAAAA,EAAAA,UAAS,KACjC,GAAEC,IAAOC,EAAAA,EAAAA,MAef,OAbAC,EAAAA,EAAAA,YAAU,KACkBC,WACxB,IACE,MAAMC,QAAgBC,EAAAA,GAAc,SAADC,OAAUN,EAAE,aAC/CF,EAAWM,EAGb,CAFE,MAAOG,GACPC,QAAQD,MAAM,yCAA0CA,EAC1D,GAGFE,EAAmB,GAClB,CAACT,IAECH,GAA8B,IAAnBA,EAAQa,QAStBC,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAAA,OAAAC,SACGf,EAAQgB,KAAIC,IAAA,IAAC,OAAEC,EAAM,QAAEC,EAAO,GAAEhB,GAAIc,EAAA,OACnCG,EAAAA,EAAAA,MAAA,OAAAL,SAAA,EACEK,EAAAA,EAAAA,MAAA,KAAAL,SAAA,CAAG,WAASG,MACZJ,EAAAA,EAAAA,KAAA,KAAAC,SAAII,MAFIhB,EAGJ,SAbVW,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAAA,MAAAC,SAAI,+BAeF,C,wDCtCVM,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,MAEaC,EAAYhB,MAAOiB,EAAKC,KACnC,IAEE,aADuBH,EAAAA,EAAAA,IAAUE,EAAK,CAAEC,OAAQ,IAAKA,EAAQC,QAJjD,uCAKIC,IAIlB,CAHE,MAAOhB,GAEP,MADAC,QAAQD,MAAM,4BAADD,OAA6Bc,EAAG,KAAKb,GAC5C,IAAIiB,MAAM,uBAClB,GAWWC,EAAmBzB,GACvBmB,EAAU,SAADb,OAAUN,G","sources":["components/MovieReviews/MovieReviews.jsx","services/http-requests.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport * as API from '../../services/http-requests';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchMovieReviews = async () => {\n      try {\n        const results = await API.fetchData(`movie/${id}/reviews`);\n        setReviews(results);\n      } catch (error) {\n        console.error('Something went wrong, please try again', error);\n      }\n    };\n\n    fetchMovieReviews();\n  }, [id]);\n\n  if (!reviews || reviews.length === 0) {\n    return (\n      <div>\n        <h2>No reviews for this movie</h2>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <div>\n        {reviews.map(({ author, content, id }) => (\n          <div key={id}>\n            <p>Author: {author}</p>\n            <p>{content}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nReviews.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      author: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '6167a2fbe619d64566c427d4bc6ed1cb';\n\nexport const fetchData = async (url, params) => {\n  try {\n    const response = await axios.get(url, { params: { ...params, api_key: API_KEY } });\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching data from ${url}:`, error);\n    throw new Error('Failed to fetch data');\n  }\n};\n\nexport const useTrendingMovies = () => {\n  return fetchData('trending/movie/day');\n};\n\nexport const useSearchMovies = (query) => {\n  return fetchData('search/movie', { params: { query } });\n};\n\nexport const useMovieDetails = (id) => {\n  return fetchData(`movie/${id}`);\n};\n\nexport const useMovieCredits = (id) => {\n  return fetchData(`movie/${id}/credits`);\n};\n\nexport const useMovieReviews = (id) => {\n  return fetchData(`movie/${id}/reviews`);\n};\n"],"names":["Reviews","reviews","setReviews","useState","id","useParams","useEffect","async","results","API","concat","error","console","fetchMovieReviews","length","_jsx","children","map","_ref","author","content","_jsxs","axios","fetchData","url","params","api_key","data","Error","useMovieDetails"],"sourceRoot":""}