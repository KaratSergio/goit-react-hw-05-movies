{"version":3,"file":"static/js/304.08f030f1.chunk.js","mappings":"yLAEO,MAAMA,EAAmBC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mEAM7BC,EAAgBH,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,oDAK1BG,EAAgBL,EAAAA,GAAAA,EAAQM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,mGASxBK,EAAcP,EAAAA,GAAAA,IAAUQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,sEAMxBO,EAAaT,EAAAA,GAAAA,GAASU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,yE,aClBnC,MAyBA,EAzBkBS,IAAiB,IAAhB,OAAEC,GAAQD,EAC3B,MAAME,GAAWC,EAAAA,EAAAA,MAGjB,OACEC,EAAAA,EAAAA,KAAChB,EAAgB,CAAAiB,SACdJ,EAAOK,KAAIC,IAAA,IAAC,MAAEC,EAAK,GAAEC,EAAE,YAAEC,GAAaH,EAAA,OACrCH,EAAAA,EAAAA,KAACZ,EAAa,CAAAa,UACZM,EAAAA,EAAAA,MAACjB,EAAa,CAACkB,KAAI,WAAAC,OAAaJ,GAAMK,MAAO,CAAEC,KAAMb,GAAWG,SAAA,EAC9DD,EAAAA,EAAAA,KAACR,EAAW,CACVoB,IAAKN,EAAW,GAAAG,OARZ,mCAQyBA,OAAGH,GAAgB,GAChDO,IAAKT,KAEPJ,EAAAA,EAAAA,KAACN,EAAU,CAAAO,SAAEG,QANGC,EAQJ,KAED,C,kGCzBhB,MAAMS,EAAc7B,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kDAKxB4B,EAAQ9B,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,sE,aCD9B,MAwBA,EAxBa6B,KACX,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,KAEzCC,EAAAA,EAAAA,YAAU,KACRC,GAAgB,GACf,IAEH,MAAMA,EAAiBC,UACrB,IACE,MAAM,QAAEC,SAAkBC,EAAAA,GAAc,sBACxCN,EAAYK,EAGd,CAFE,MAAOE,GACPC,QAAQD,MAAM,yCAA0CA,EAC1D,GAGF,OACElB,EAAAA,EAAAA,MAACO,EAAW,CAAAb,SAAA,EACVD,EAAAA,EAAAA,KAACe,EAAK,CAAAd,SAAC,qBACPD,EAAAA,EAAAA,KAAC2B,EAAAA,EAAS,CAAC9B,OAAQoB,MACP,C,wDCxBlBW,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,MAEaC,EAAYP,MAAOQ,EAAKC,KACnC,IAEE,aADuBH,EAAAA,EAAAA,IAAUE,EAAK,CAAEC,OAAQ,IAAKA,EAAQC,QAJjD,uCAKIC,IAIlB,CAHE,MAAOR,GAEP,MADAC,QAAQD,MAAM,4BAADhB,OAA6BqB,EAAG,KAAKL,GAC5C,IAAIS,MAAM,uBAClB,GAWWC,EAAmB9B,GACvBwB,EAAU,SAADpB,OAAUJ,G","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","pages/Home/Home.styled.js","pages/Home/Home.jsx","services/http-requests.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MovieListWrapper = styled.div`\n  display: flex;\n  gap: 40px 30px;\n  flex-wrap: wrap;\n`;\n\nexport const MovieListItem = styled.div`\n  width: 200px;  \n  text-align: center;\n`;\n\nexport const MovieListLink = styled.a`\n  color: #333;\n  transition: color 0.3s ease;\n\n  &:hover {\n    color: #ff6347;\n  }\n`;\n\nexport const MoviePoster = styled.img`\n  max-width: 100%;\n  height: auto;\n  border-radius: 8px;\n`;\n\nexport const MovieTitle = styled.h2`\n  margin-top: 10px;\n  font-size: 16px;\n  font-weight: bold;\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  MovieListWrapper,\n  MovieListItem,\n  MovieListLink,\n  MoviePoster,\n  MovieTitle,\n} from './MovieList.styled';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n  const baseURL = 'https://image.tmdb.org/t/p/w200';\n\n  return (\n    <MovieListWrapper>\n      {movies.map(({ title, id, poster_path }) => (\n        <MovieListItem key={id}>\n          <MovieListLink href={`/movies/${id}`} state={{ from: location }}>\n            <MoviePoster\n              src={poster_path ? `${baseURL}${poster_path}` : ''}\n              alt={title}\n            />\n            <MovieTitle>{title}</MovieTitle>\n          </MovieListLink>\n        </MovieListItem>\n      ))}\n    </MovieListWrapper>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n\nexport default MovieList;\n","import styled from 'styled-components';\n\nexport const HomeWrapper = styled.div`\n  max-width: 1120px;\n  padding: 20px;\n`;\n\nexport const Title = styled.h2`\n  color: #333;\n  font-size: 24px;\n  margin-bottom: 20px;\n`;\n","import { useState, useEffect } from 'react';\nimport * as API from '../../services/http-requests';\nimport MovieList from '../../components/MovieList/MovieList';\n\nimport { HomeWrapper, Title } from './Home.styled';\n\nconst Home = () => {\n  const [trending, setTrending] = useState([]);\n\n  useEffect(() => {\n    renderTrending();\n  }, []);\n\n  const renderTrending = async () => {\n    try {\n      const { results } = await API.fetchData('trending/movie/day');\n      setTrending(results);\n    } catch (error) {\n      console.error('Something went wrong, please try again', error);\n    }\n  };\n\n  return (\n    <HomeWrapper>\n      <Title>Trending movies</Title>\n      <MovieList movies={trending} />\n    </HomeWrapper>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '6167a2fbe619d64566c427d4bc6ed1cb';\n\nexport const fetchData = async (url, params) => {\n  try {\n    const response = await axios.get(url, { params: { ...params, api_key: API_KEY } });\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching data from ${url}:`, error);\n    throw new Error('Failed to fetch data');\n  }\n};\n\nexport const useTrendingMovies = () => {\n  return fetchData('trending/movie/day');\n};\n\nexport const useSearchMovies = (query) => {\n  return fetchData('search/movie', { params: { query } });\n};\n\nexport const useMovieDetails = (id) => {\n  return fetchData(`movie/${id}`);\n};\n\nexport const useMovieCredits = (id) => {\n  return fetchData(`movie/${id}/credits`);\n};\n\nexport const useMovieReviews = (id) => {\n  return fetchData(`movie/${id}/reviews`);\n};\n"],"names":["MovieListWrapper","styled","_templateObject","_taggedTemplateLiteral","MovieListItem","_templateObject2","MovieListLink","_templateObject3","MoviePoster","_templateObject4","MovieTitle","_templateObject5","_ref","movies","location","useLocation","_jsx","children","map","_ref2","title","id","poster_path","_jsxs","href","concat","state","from","src","alt","HomeWrapper","Title","Home","trending","setTrending","useState","useEffect","renderTrending","async","results","API","error","console","MovieList","axios","fetchData","url","params","api_key","data","Error","useMovieDetails"],"sourceRoot":""}