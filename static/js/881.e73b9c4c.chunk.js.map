{"version":3,"file":"static/js/881.e73b9c4c.chunk.js","mappings":"yNAKO,MAAMA,EAAeA,KAC1B,MAAOC,EAASC,IAAcC,EAAAA,EAAAA,UAAS,KACjC,GAAEC,IAAOC,EAAAA,EAAAA,MAgBf,OAbAC,EAAAA,EAAAA,YAAU,KACkBC,WACxB,IACE,MAAQC,KAAMC,SAAkBC,EAAAA,GAAc,SAADC,OAAUP,EAAE,aACzDF,EAAWO,EAGb,CAFE,MAAOG,GACPC,QAAQD,MAAM,yCAA0CA,EAC1D,GAGFE,EAAmB,GAClB,CAACV,IAECH,GAA8B,IAAnBA,EAAQc,QAStBC,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAAA,OAAAC,SACGhB,EAAQiB,KAAIC,IAA4C,IAA3C,aAAEC,EAAY,KAAEC,EAAI,UAAEC,EAAS,GAAElB,GAAIe,EACjD,OACEI,EAAAA,EAAAA,MAAA,OAAAN,SAAA,EACED,EAAAA,EAAAA,KAAA,OACEQ,IAAKJ,EAAY,GAAAT,OA9Bf,mCA8B4BA,OAAGS,GAAiB,GAClDK,IAAKJ,KAEPE,EAAAA,EAAAA,MAAA,OAAAN,SAAA,EACED,EAAAA,EAAAA,KAAA,KAAAC,SAAII,KACJE,EAAAA,EAAAA,MAAA,KAAAN,SAAA,CAAG,cAAYK,UAPTlB,EASJ,SApBZY,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAAA,MAAAC,SAAI,2CAuBF,EAeV,G,+CC9DAS,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,MAEaC,EAAYpB,MAAOqB,EAAKC,KACnC,IAEE,aADuBH,EAAAA,EAAAA,IAAUE,EAAK,CAAEC,OAAQ,IAAKA,EAAQC,QAJjD,uCAKIC,IAIlB,CAHE,MAAOnB,GAEP,MADAC,QAAQD,MAAM,4BAADD,OAA6BiB,EAAG,KAAKhB,GAC5C,IAAIoB,MAAM,uBAClB,E","sources":["components/MovieCredits/MovieCredits.jsx","services/http-requests.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport * as API from '../../services/http-requests';\n\nexport const MovieCredits = () => {\n  const [credits, setCredits] = useState([]);\n  const { id } = useParams();\n  const baseURL = 'https://image.tmdb.org/t/p/w200';\n\n  useEffect(() => {\n    const fetchMovieCredits = async () => {\n      try {\n        const { cast: results } = await API.fetchData(`movie/${id}/credits`);\n        setCredits(results);\n      } catch (error) {\n        console.error('Something went wrong, please try again', error);\n      }\n    };\n\n    fetchMovieCredits();\n  }, [id]);\n\n  if (!credits || credits.length === 0) {\n    return (\n      <div>\n        <h2>No credits information for this movie</h2>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <div>\n        {credits.map(({ profile_path, name, character, id }) => {\n          return (\n            <div key={id}>\n              <img\n                src={profile_path ? `${baseURL}${profile_path}` : ''}\n                alt={name}\n              />\n              <div>\n                <p>{name}</p>\n                <p>Character: {character}</p>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nMovieCredits.propTypes = {\n  credits: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      character: PropTypes.string.isRequired,\n      profile_path: PropTypes.string,\n    })\n  ),\n};\n\nexport default MovieCredits;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '6167a2fbe619d64566c427d4bc6ed1cb';\n\nexport const fetchData = async (url, params) => {\n  try {\n    const response = await axios.get(url, { params: { ...params, api_key: API_KEY } });\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching data from ${url}:`, error);\n    throw new Error('Failed to fetch data');\n  }\n};\n\nexport const useTrendingMovies = () => {\n  return fetchData('trending/movie/day');\n};\n\nexport const useSearchMovies = (query) => {\n  return fetchData('search/movie', { params: { query } });\n};\n\nexport const useMovieDetails = (id) => {\n  return fetchData(`movie/${id}`);\n};\n\nexport const useMovieCredits = (id) => {\n  return fetchData(`movie/${id}/credits`);\n};\n\nexport const useMovieReviews = (id) => {\n  return fetchData(`movie/${id}/reviews`);\n};\n"],"names":["MovieCredits","credits","setCredits","useState","id","useParams","useEffect","async","cast","results","API","concat","error","console","fetchMovieCredits","length","_jsx","children","map","_ref","profile_path","name","character","_jsxs","src","alt","axios","fetchData","url","params","api_key","data","Error"],"sourceRoot":""}