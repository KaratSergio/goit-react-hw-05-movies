{"version":3,"file":"static/js/853.028c26a6.chunk.js","mappings":"iMAEO,MAAMA,EAAmBC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mEAM7BC,EAAgBH,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,oDAc1BG,GATgBL,EAAAA,GAAAA,EAAQM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,mGASVF,EAAAA,GAAAA,IAAUO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,uEAMxBM,EAAaR,EAAAA,GAAAA,GAASS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,yE,aCnB5B,MAyBP,EAzByBQ,IAAiB,IAAhB,OAAEC,GAAQD,EAClC,MAAME,GAAWC,EAAAA,EAAAA,MAGjB,OACEC,EAAAA,EAAAA,KAACf,EAAgB,CAAAgB,SACdJ,EAAOK,KAAIC,IAAA,IAAC,MAAEC,EAAK,GAAEC,EAAE,YAAEC,GAAaH,EAAA,OACrCH,EAAAA,EAAAA,KAACX,EAAa,CAAAY,UACZM,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,GAAE,WAAAC,OAAaL,GAAMM,MAAO,CAAEC,KAAMd,GAAWG,SAAA,EACnDD,EAAAA,EAAAA,KAACT,EAAW,CACVsB,IAAKP,EAAW,GAAAI,OARZ,mCAQyBA,OAAGJ,GAAgB,GAChDQ,IAAKV,KAEPJ,EAAAA,EAAAA,KAACN,EAAU,CAAAO,SAAEG,QANGC,EAQJ,KAED,C,kGCxBhB,MA8BP,EA9BsBT,IAAoC,IAAnC,MAAEmB,EAAK,SAAEC,EAAQ,SAAEC,GAAUrB,EAClD,OACEW,EAAAA,EAAAA,MAAA,QAAMU,SAAUA,EAAShB,SAAA,EACvBM,EAAAA,EAAAA,MAAA,SAAAN,SAAA,CAAO,iBAELD,EAAAA,EAAAA,KAAA,SACEkB,KAAK,OACLC,KAAK,aACLJ,MAAOA,EACPC,SAAUA,EACVI,aAAa,MACbC,WAAS,EACTC,YAAY,sBAGhBtB,EAAAA,EAAAA,KAAA,UAAQkB,KAAK,SAAQjB,UACnBD,EAAAA,EAAAA,KAAA,QAAMuB,KAAK,MAAM,aAAW,SAAQtB,SAAC,qBAIlC,E,YCfJ,MAAMuB,EAASA,KAAO,IAADC,EAC1B,MAAO5B,EAAQ6B,IAAaC,EAAAA,EAAAA,UAAS,KAC9BC,EAAOC,IAAYF,EAAAA,EAAAA,UAAS,KAC5BG,EAAcC,IAAmBC,EAAAA,EAAAA,MAElCC,EAAuC,QAA5BR,EAAGK,EAAaI,IAAI,gBAAQ,IAAAT,EAAAA,EAAI,GAE3CU,EAAeC,IACnBP,EAASO,EAAEC,cAActB,MAAMuB,cAAc,EAyB/C,OAhBAC,EAAAA,EAAAA,YAAU,KACR,IAAKN,EAAa,OAEEO,WAClB,IACE,MAAM,QAAEC,SAAkBC,EAAAA,GAAc,eAAgB,CAAEd,MAAOK,IAEjEP,EAAUe,EAGZ,CAFE,MAAOE,GACPC,QAAQD,MAAM,yCAA0CA,EAC1D,GAGFE,EAAa,GACZ,CAACZ,KAGFjC,EAAAA,EAAAA,KAAA,OAAAC,UACEM,EAAAA,EAAAA,MAAA,OAAAN,SAAA,EACAM,EAAAA,EAAAA,MAACuC,EAAM,CAAC/B,MAAOa,EAAOZ,SAAUmB,EAAclB,SAzB7BmB,IACnBA,EAAEW,iBACFhB,EAAgB,CAAEH,MAAOA,IACzBC,EAAS,GAAG,EAsB2D5B,SAAA,EACjEM,EAAAA,EAAAA,MAAA,SAAAN,SAAA,CAAO,WAELD,EAAAA,EAAAA,KAAA,SAAOkB,KAAK,OAAOH,MAAOa,EAAOZ,SAAUmB,QAE7CnC,EAAAA,EAAAA,KAAA,UAAQkB,KAAK,SAAQjB,SAAC,eAExBD,EAAAA,EAAAA,KAACgD,EAAAA,EAAS,CAACnD,OAAQA,QAEjB,EAIV,G,+CCtDAoD,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,MAEaC,EAAYV,MAAOW,EAAKC,KACnC,IAEE,aADuBH,EAAAA,EAAAA,IAAUE,EAAK,CAAEC,OAAQ,IAAKA,EAAQC,QAJjD,uCAKIC,IAIlB,CAHE,MAAOX,GAEP,MADAC,QAAQD,MAAM,4BAADjC,OAA6ByC,EAAG,KAAKR,GAC5C,IAAIY,MAAM,uBAClB,E","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","components/Search/Search.jsx","pages/Movies/Movies.jsx","services/http-requests.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MovieListWrapper = styled.div`\n  display: flex;\n  gap: 40px 30px;\n  flex-wrap: wrap;\n`;\n\nexport const MovieListItem = styled.div`\n  width: 200px;  \n  text-align: center;\n`;\n\nexport const MovieListLink = styled.a`\n  color: #333;\n  transition: color 0.3s ease;\n\n  &:hover {\n    color: #ff6347;\n  }\n`;\n\nexport const MoviePoster = styled.img`\n  max-width: 100%;\n  height: auto;\n  border-radius: 8px;\n`;\n\nexport const MovieTitle = styled.h2`\n  margin-top: 10px;\n  font-size: 16px;\n  font-weight: bold;\n`;\n","import { useLocation, Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  MovieListWrapper,\n  MovieListItem,\n  MoviePoster,\n  MovieTitle,\n} from './MovieList.styled';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n  const baseURL = 'https://image.tmdb.org/t/p/w200';\n\n  return (\n    <MovieListWrapper>\n      {movies.map(({ title, id, poster_path }) => (\n        <MovieListItem key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            <MoviePoster\n              src={poster_path ? `${baseURL}${poster_path}` : ''}\n              alt={title}\n            />\n            <MovieTitle>{title}</MovieTitle>\n          </Link>\n        </MovieListItem>\n      ))}\n    </MovieListWrapper>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n\nexport default MovieList;\n","import PropTypes from 'prop-types';\n\nexport const Search = ({ value, onChange, onSubmit }) => {\n  return (\n    <form onSubmit={onSubmit}>\n      <label>\n        Search movie:\n        <input\n          type=\"text\"\n          name=\"searchName\"\n          value={value}\n          onChange={onChange}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Movie name...\"\n        />\n      </label>\n      <button type=\"submit\">\n        <span role=\"img\" aria-label=\"Search\">\n          üîç\n        </span>\n      </button>\n    </form>\n  );\n};\n\nSearch.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Search;\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport * as API from '../../services/http-requests';\n\nimport Search from '../../components/Search/Search';\nimport MovieList from '../../components/MovieList/MovieList';\n\nexport const Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [query, setQuery] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const movieSearch = searchParams.get('query') ?? '';\n\n  const handleChange = e => {\n    setQuery(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ query: query });\n    setQuery('');\n  };\n\n  useEffect(() => {\n    if (!movieSearch) return;\n\n    const fetchMovies = async () => {\n      try {\n        const { results } = await API.fetchData('search/movie', { query: movieSearch });\n\n        setMovies(results);\n      } catch (error) {\n        console.error('Something went wrong, please try again', error);\n      }\n    };\n\n    fetchMovies();\n  }, [movieSearch]);\n\n  return (\n    <div>\n      <div>\n      <Search value={query} onChange={handleChange} onSubmit={handleSubmit}>\n          <label>\n            Search:\n            <input type=\"text\" value={query} onChange={handleChange} />\n          </label>\n          <button type=\"submit\">Search</button>\n        </Search>\n        <MovieList movies={movies} />\n      </div>\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '6167a2fbe619d64566c427d4bc6ed1cb';\n\nexport const fetchData = async (url, params) => {\n  try {\n    const response = await axios.get(url, { params: { ...params, api_key: API_KEY } });\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching data from ${url}:`, error);\n    throw new Error('Failed to fetch data');\n  }\n};\n\nexport const useTrendingMovies = () => {\n  return fetchData('trending/movie/day');\n};\n\nexport const useSearchMovies = (query) => {\n  return fetchData('search/movie', { params: { query } });\n};\n\nexport const useMovieDetails = (id) => {\n  return fetchData(`movie/${id}`);\n};\n\nexport const useMovieCredits = (id) => {\n  return fetchData(`movie/${id}/credits`);\n};\n\nexport const useMovieReviews = (id) => {\n  return fetchData(`movie/${id}/reviews`);\n};\n"],"names":["MovieListWrapper","styled","_templateObject","_taggedTemplateLiteral","MovieListItem","_templateObject2","MoviePoster","_templateObject3","_templateObject4","MovieTitle","_templateObject5","_ref","movies","location","useLocation","_jsx","children","map","_ref2","title","id","poster_path","_jsxs","Link","to","concat","state","from","src","alt","value","onChange","onSubmit","type","name","autoComplete","autoFocus","placeholder","role","Movies","_searchParams$get","setMovies","useState","query","setQuery","searchParams","setSearchParams","useSearchParams","movieSearch","get","handleChange","e","currentTarget","toLowerCase","useEffect","async","results","API","error","console","fetchMovies","Search","preventDefault","MovieList","axios","fetchData","url","params","api_key","data","Error"],"sourceRoot":""}